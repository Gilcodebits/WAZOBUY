{% extends 'base.html.twig' %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('styles/admindashboard.css') }}">
    <style>
        :root {
            --primary-color:#013c9a;
            --secondary-color: #764ba2;
            --success-color: #28a745;
            --warning-color: #ffc107;
            --danger-color: #dc3545;
            --info-color: #17a2b8;
            --light-color: #f8f9fa;
            --dark-color: #343a40;
            --border-radius: 12px;
            --box-shadow: 0 4px 20px rgba(0,0,0,0.1);
            --transition: all 0.3s ease;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            min-height: 100vh;
        }

        .dashboard {
            display: flex;
            min-height: 100vh;
        }

        /* Sidebar */
        .sidebar {
            width: 280px;
            background: linear-gradient(180deg, var(--primary-color) 0%, var(--secondary-color) 100%);
            color: white;
            padding: 2rem 0;
            position: fixed;
            height: 100vh;
            overflow-y: auto;
            z-index: 1000;
            transition: var(--transition);
        }

        .sidebar .logo {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
        }

        .sidebar .logo img {
            height: 150px !important;
            width: auto !important;
            max-width: 200%;
            display: block;
            margin: 0 auto;
        }

        .logo-text {
            font-size: 1.8rem;
            font-weight: 700;
            color: white;
            text-decoration: none;
            display: block;
        }

        .logo-subtitle {
            font-size: 0.85rem;
            opacity: 0.8;
            margin-top: 0.25rem;
            display: block;
        }

        .sidebar nav {
            padding: 0 1rem;
        }

        .nav-item {
            display: flex;
            align-items: center;
            padding: 1rem 1.5rem;
            color: rgba(255,255,255,0.8);
            text-decoration: none;
            border-radius: var(--border-radius);
            margin-bottom: 0.5rem;
            transition: var(--transition);
            font-weight: 500;
        }

        .nav-item:hover, .nav-item.active {
            background: rgba(255,255,255,0.15);
            color: white;
            transform: translateX(5px);
        }

        .nav-item-icon {
            margin-right: 1rem;
            font-size: 1.2rem;
            width: 24px;
            text-align: center;
        }

        .admin-section {
            position: absolute;
            bottom: 2rem;
            left: 2rem;
            right: 2rem;
            padding: 1.5rem;
            background: rgba(255,255,255,0.1);
            border-radius: var(--border-radius);
            backdrop-filter: blur(10px);
        }

        .admin-avatar {
            width: 50px;
            height: 50px;
            background: rgba(255,255,255,0.2);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: 600;
            margin-bottom: 1rem;
        }

        /* Main Content */
        .main-content {
            flex: 1;
            margin-left: 280px;
            padding: 2rem;
            transition: var(--transition);
        }

        /* Header */
        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
            padding: 1.5rem 2rem;
            background: white;
            border-radius: var(--border-radius);
            box-shadow: var(--box-shadow);
        }

        .mobile-menu-toggle {
            display: none;
            background: none;
            border: none;
            font-size: 1.5rem;
            cursor: pointer;
            color: var(--dark-color);
        }

        .search-bar {
            display: flex;
            align-items: center;
            background: var(--light-color);
            border-radius: 25px;
            padding: 0.75rem 1.5rem;
            flex: 1;
            max-width: 400px;
            margin: 0 2rem;
        }

        .search-icon {
            margin-right: 0.75rem;
            color: #6c757d;
        }

        .search-input {
            border: none;
            background: none;
            outline: none;
            width: 100%;
            font-size: 0.9rem;
        }

        .header-actions {
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .header-icon-box {
            position: relative;
            width: 48px;
            height: 48px;
            background: #fff;
            border: 2px solid var(--primary-color);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            box-shadow: 0 2px 8px rgba(102,126,234,0.10);
            margin-right: 0.5rem;
            cursor: pointer;
            transition: box-shadow 0.2s, border-color 0.2s;
        }
        .header-icon-box:hover {
            box-shadow: 0 4px 16px rgba(102,126,234,0.18);
            border-color: var(--secondary-color);
        }
        .header-icon-box i {
            font-size: 1.5rem;
            color: var(--primary-color);
            transition: color 0.2s;
        }
        .header-icon-box:hover i {
            color: var(--secondary-color);
        }
        .header-icon-badge {
            position: absolute;
            top: 4px;
            right: 4px;
            background: var(--danger-color);
            color: #fff;
            border-radius: 50%;
            width: 20px;
            height: 20px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 0.85rem;
            font-weight: 700;
            border: 2px solid #fff;
            box-shadow: 0 2px 6px rgba(220,53,69,0.10);
            z-index: 2;
        }

        .user-info {
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .user-avatar {
            width: 45px;
            height: 45px;
            background: var(--primary-color);
            color: white;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: 600;
            cursor: pointer;
        }

        /* Dashboard Content */
        .dashboard-content {
            max-width: 1400px;
            margin: 0 auto;
        }

        .page-title {
            font-size: 2.5rem;
            font-weight: 700;
            color: var(--dark-color);
            margin-bottom: 0.5rem;
        }

        .page-date {
            color: #6c757d;
            font-size: 1.1rem;
            margin-bottom: 2rem;
        }

        /* Stats Grid */
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
            gap: 1.5rem;
            margin-bottom: 2rem;
        }

        .stat-card {
            background: white;
            padding: 2rem;
            border-radius: var(--border-radius);
            box-shadow: var(--box-shadow);
            transition: var(--transition);
            position: relative;
            overflow: hidden;
        }

        .stat-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 30px rgba(0,0,0,0.15);
        }

        .stat-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: linear-gradient(90deg, var(--primary-color), var(--secondary-color));
        }

        .stat-icon {
            width: 60px;
            height: 60px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
            margin-bottom: 1rem;
        }

        .stat-label {
            font-size: 0.9rem;
            color: #6c757d;
            margin-bottom: 0.5rem;
            font-weight: 500;
        }

        .stat-value {
            font-size: 2.5rem;
            font-weight: 700;
            color: var(--dark-color);
            margin-bottom: 0.5rem;
        }

        .stat-change {
            font-size: 0.85rem;
            font-weight: 600;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .stat-change.positive {
            color: var(--success-color);
        }

        .stat-change.negative {
            color: var(--danger-color);
        }

        /* Charts Grid */
        .charts-grid {
            display: grid;
            grid-template-columns: 2fr 1fr;
            gap: 1.5rem;
            margin-bottom: 2rem;
        }

        .chart-card {
            background: white;
            padding: 2rem;
            border-radius: var(--border-radius);
            box-shadow: var(--box-shadow);
        }

        .chart-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1.5rem;
        }

        .chart-title {
            font-size: 1.3rem;
            font-weight: 600;
            color: var(--dark-color);
        }

        .chart-filters {
            display: flex;
            gap: 0.5rem;
        }

        .filter-btn {
            padding: 0.5rem 1rem;
            border: 1px solid #dee2e6;
            background: white;
            border-radius: 20px;
            font-size: 0.85rem;
            cursor: pointer;
            transition: var(--transition);
        }

        .filter-btn:hover, .filter-btn.active {
            background: var(--primary-color);
            color: white;
            border-color: var(--primary-color);
        }

        .chart-container {
            height: 300px;
            position: relative;
        }

        /* Tables Grid */
        .tables-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 1.5rem;
        }

        .table-card {
            background: white;
            border-radius: var(--border-radius);
            box-shadow: var(--box-shadow);
            overflow: hidden;
        }

        .table-header {
            padding: 1.5rem 2rem;
            background: var(--light-color);
            border-bottom: 1px solid #dee2e6;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .table-title {
            font-size: 1.2rem;
            font-weight: 600;
            color: var(--dark-color);
            margin: 0;
        }

        .view-all-btn {
            color: var(--primary-color);
            text-decoration: none;
            font-weight: 500;
            font-size: 0.9rem;
            transition: var(--transition);
        }

        .view-all-btn:hover {
            color: var(--secondary-color);
        }

        .table {
            width: 100%;
            margin: 0;
        }

        .table th {
            background: #f8f9fa;
            padding: 1rem;
            font-weight: 600;
            color: var(--dark-color);
            border-bottom: 2px solid #dee2e6;
        }

        .table td {
            padding: 0.7rem;
            border-bottom: 1px solid #dee2e6;
            vertical-align: middle;
        }

        .table tbody tr:hover {
            background: #f8f9fa;
        }

        .status-badge {
            padding: 0.4rem 0.8rem;
            border-radius: 20px;
            font-size: 0.75rem;
            font-weight: 600;
            text-transform: uppercase;
        }

        .status-badge.pending { background: var(--warning-color); color: black; }
        .status-badge.success { background: var(--success-color); color: white; }
        .status-badge.info { background: var(--info-color); color: white; }
        .status-badge.danger { background: var(--danger-color); color: white; }
        .status-badge.warning { background: var(--warning-color); color: black; }

        .action-btn {
            padding: 0.4rem 0.8rem;
            border-radius: 6px;
            text-decoration: none;
            font-size: 0.75rem;
            font-weight: 500;
            margin-right: 0.5rem;
            transition: var(--transition);
        }

        .action-btn.view { background: var(--info-color); color: white; }
        .action-btn.resolve { background: var(--success-color); color: white; }
        .action-btn.activate { background: var(--success-color); color: white; }
        .action-btn.deactivate { background: var(--danger-color); color: white; }

        .action-btn:hover {
            opacity: 0.8;
            transform: translateY(-1px);
        }

        /* Responsive Design */
        @media (max-width: 1200px) {
            .charts-grid {
                grid-template-columns: 1fr;
            }
            
            .tables-grid {
                grid-template-columns: 1fr;
            }
        }

        @media (max-width: 768px) {
            .sidebar {
                transform: translateX(-100%);
            }
            
            .sidebar.mobile-open {
                transform: translateX(0);
            }
            
            .main-content {
                margin-left: 0;
                padding: 1rem;
            }
            
            .mobile-menu-toggle {
                display: block;
            }
            
            .search-bar {
                display: none;
            }
            
            .stats-grid {
                grid-template-columns: 1fr;
            }
            
            .page-title {
                font-size: 2rem;
            }
            
            .header {
                flex-direction: column;
                gap: 1rem;
                align-items: stretch;
            }
            
            .header-actions {
                justify-content: center;
            }
        }

        .sidebar-overlay {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0,0,0,0.5);
            z-index: 999;
        }

        /* Animations */
        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .stat-card, .chart-card, .table-card {
            animation: fadeInUp 0.6s ease-out;
        }

        .stat-card:nth-child(1) { animation-delay: 0.1s; }
        .stat-card:nth-child(2) { animation-delay: 0.2s; }
        .stat-card:nth-child(3) { animation-delay: 0.3s; }
        .stat-card:nth-child(4) { animation-delay: 0.4s; }

        .user-menu-container {
            position: relative;
        }
        .user-menu {
            display: none;
            position: absolute;
            top: 60px;
            right: 0;
            background: white;
            border-radius: var(--border-radius);
            box-shadow: var(--box-shadow);
            min-width: 180px;
            z-index: 2000;
            padding: 0.5rem 0;
            animation: fadeInUp 0.3s;
        }
        .user-menu-item {
            display: flex;
            align-items: center;
            gap: 0.75rem;
            padding: 0.75rem 1.5rem;
            color: var(--dark-color);
            text-decoration: none;
            font-size: 1rem;
            transition: background 0.2s;
        }
        .user-menu-item:hover {
            background: var(--light-color);
        }

        body.theme-light {
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%) !important;
            color: #222;
        }
        body.theme-dark {
            background: linear-gradient(135deg, #23272f 0%, #2d3748 100%) !important;
            color: #f8f9fa;
        }
        body.theme-dark .main-content, body.theme-dark .header, body.theme-dark .stat-card, body.theme-dark .chart-card, body.theme-dark .table-card {
            background: #23272f !important;
            color: #f8f9fa !important;
            box-shadow: 0 4px 20px rgba(0,0,0,0.25);
        }
        body.theme-dark .sidebar {
            background: linear-gradient(180deg, #23272f 0%, #2d3748 100%) !important;
            color: #f8f9fa !important;
        }
        body.theme-dark .nav-item.active, body.theme-dark .nav-item:hover {
            background: rgba(255,255,255,0.08) !important;
            color: #fff !important;
        }
        body.theme-dark .table th, body.theme-dark .table-header {
            background: #23272f !important;
            color: #f8f9fa !important;
        }
        body.theme-dark .status-badge.success { background: #28a745 !important; color: #fff !important; }
        body.theme-dark .status-badge.info { background: #17a2b8 !important; color: #fff !important; }
        body.theme-dark .status-badge.danger { background: #dc3545 !important; color: #fff !important; }
        body.theme-dark .status-badge.warning { background: #ffc107 !important; color: #23272f !important; }

        .toggle-switch {
            width: 44px;
            height: 24px;
            border-radius: 12px;
            background: #e2e8f0;
            position: relative;
            cursor: pointer;
            transition: background-color 0.2s;
            display: inline-block;
            vertical-align: middle;
        }
        .toggle-switch.active {
            background: #10b981;
        }
        .toggle-switch::after {
            content: '';
            position: absolute;
            top: 2px;
            left: 2px;
            width: 20px;
            height: 20px;
            border-radius: 50%;
            background: white;
            transition: transform 0.2s;
            transform: translateX(0);
        }
        .toggle-switch.active::after {
            transform: translateX(20px);
        }

        #admin-chat-panel {
            position: fixed;
            top: 0;
            right: -420px;
            width: 400px;
            height: 100vh;
            background: #fff;
            box-shadow: -4px 0 24px rgba(0,0,0,0.12);
            z-index: 2000;
            transition: right 0.3s cubic-bezier(.4,0,.2,1);
            display: flex;
            flex-direction: column;
        }
        #admin-chat-panel.open {
            right: 0;
        }
        #admin-chat-header {
            padding: 1.2rem 1.5rem;
            background: var(--primary-color);
            color: #fff;
            font-size: 1.2rem;
            font-weight: 700;
            display: flex;
            align-items: center;
            justify-content: space-between;
        }
        #admin-chat-close {
            background: none;
            border: none;
            color: #fff;
            font-size: 1.5rem;
            cursor: pointer;
        }
        #admin-chat-conversations {
            border-bottom: 1px solid #e5e7eb;
            max-height: 180px;
            overflow-y: auto;
        }
        .admin-chat-conv {
            display: flex;
            align-items: center;
            gap: 0.7rem;
            padding: 0.8rem 1.5rem;
            border-bottom: 1px solid #f3f4f6;
            cursor: pointer;
            transition: background 0.2s;
            position: relative;
        }
        .admin-chat-conv:hover {
            background: #f3f4f6;
        }
        .chat-avatar-list {
            flex-shrink: 0;
        }
        .chat-conv-info {
            flex: 1;
            min-width: 0;
        }
        .chat-conv-name {
            font-weight: 600;
            color: #222;
            font-size: 1.05rem;
            margin-bottom: 2px;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }
        .chat-conv-last {
            color: #888;
            font-size: 0.95rem;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }
        .chat-conv-meta {
            display: flex;
            flex-direction: column;
            align-items: flex-end;
            gap: 0.2rem;
        }
        .chat-conv-date {
            font-size: 0.85rem;
            color: #aaa;
        }
        .chat-conv-badge {
            background: var(--danger-color);
            color: #fff;
            border-radius: 50%;
            min-width: 22px;
            height: 22px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 0.85rem;
            font-weight: 700;
            padding: 0 7px;
            margin-top: 2px;
        }
        #admin-chat-messages {
            flex: 1;
            overflow-y: auto;
            padding: 1.2rem 1.5rem;
            background: #f8f9fa;
            display: flex;
            flex-direction: column;
            gap: 0.7rem;
        }
        .admin-chat-message {
            max-width: 80%;
            padding: 0.7rem 1.1rem;
            border-radius: 18px;
            background: #fff;
            box-shadow: 0 2px 8px rgba(102,126,234,0.08);
            font-size: 1rem;
            align-self: flex-start;
        }
        .admin-chat-message.me {
            background: var(--primary-color);
            color: #fff;
            align-self: flex-end;
        }
        #admin-chat-form {
            display: flex;
            gap: 0.5rem;
            padding: 1rem 1.5rem;
            border-top: 1px solid #e5e7eb;
            background: #fff;
        }
        #admin-chat-input {
            flex: 1;
            border-radius: 20px;
            border: 1.5px solid #e3e6f0;
            padding: 0.7rem 1.1rem;
            font-size: 1rem;
        }
        #admin-chat-send {
            background: var(--primary-color);
            color: #fff;
            border: none;
            border-radius: 20px;
            padding: 0.7rem 1.5rem;
            font-weight: 700;
            cursor: pointer;
            transition: background 0.2s;
        }
        #admin-chat-send:hover {
            background: var(--secondary-color);
        }
        #admin-chat-overlay {
            display: none;
            position: fixed;
            top: 0; left: 0; right: 0; bottom: 0;
            background: rgba(0,0,0,0.18);
            z-index: 1999;
        }
        #admin-chat-overlay.open {
            display: block;
        }

        .chat-avatar {
            width: 36px;
            height: 36px;
            border-radius: 50%;
            object-fit: cover;
            display: inline-block;
            vertical-align: middle;
            background: #e5e7eb;
            margin-right: 0.7rem;
            font-weight: 700;
            font-size: 1.1rem;
            color: #667eea;
            text-align: center;
            line-height: 36px;
        }
        .chat-avatar-initials {
            background: #e5e7eb;
        }
        .admin-chat-message {
            display: flex;
            align-items: flex-end;
            gap: 0.5rem;
            margin-bottom: 0.5rem;
        }
        .admin-chat-message.me {
            flex-direction: row-reverse;
        }
        .admin-chat-message .chat-bubble {
            background: #fff;
            border-radius: 18px;
            box-shadow: 0 2px 8px rgba(102,126,234,0.08);
            padding: 0.7rem 1.1rem;
            max-width: 80%;
            min-width: 80px;
            position: relative;
        }
        .admin-chat-message.me .chat-bubble {
            background: var(--primary-color);
            color: #fff;
        }
        .chat-meta {
            font-size: 0.85rem;
            color: #888;
            margin-bottom: 0.2rem;
            display: flex;
            justify-content: space-between;
            gap: 1rem;
        }
        .chat-name {
            font-weight: 600;
            color: #222;
        }
        .admin-chat-message.me .chat-name {
            color: #fff;
        }
        .chat-date {
            font-size: 0.8rem;
            color: #aaa;
        }
        .admin-chat-message.me .chat-date {
            color: #e0e7ff;
        }
        .chat-text {
            font-size: 1rem;
            word-break: break-word;
        }

        #notif-dropdown {
            display: none;
            position: absolute;
            top: 56px;
            right: 0;
            min-width: 340px;
            max-width: 95vw;
            background: #fff;
            border-radius: 14px;
            box-shadow: 0 8px 32px rgba(60,72,88,0.18);
            z-index: 3000;
            padding: 0.5rem 0;
            animation: fadeInUp 0.2s;
        }
        #notif-dropdown.open {
            display: block;
        }
        #notif-dropdown-header {
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 0.7rem 1.2rem 0.5rem 1.2rem;
            border-bottom: 1px solid #f3f4f6;
        }
        #notif-dropdown-header h4 {
            font-size: 1.1rem;
            font-weight: 700;
            margin: 0;
        }
        #notif-dropdown-header button {
            background: none;
            border: none;
            color: var(--primary-color);
            font-size: 0.95rem;
            cursor: pointer;
            font-weight: 600;
        }
        #notif-list {
            max-height: 340px;
            overflow-y: auto;
        }
        .notif-item {
            padding: 0.9rem 1.2rem 0.7rem 1.2rem;
            border-bottom: 1px solid #f3f4f6;
            cursor: pointer;
            transition: background 0.18s;
            position: relative;
        }
        .notif-item:last-child { border-bottom: none; }
        .notif-item.unread { background: #f5f7fa; }
        .notif-item:hover { background: #f3f4f6; }
        .notif-title {
            font-weight: 600;
            color: #222;
            font-size: 1.01rem;
            margin-bottom: 2px;
        }
        .notif-message {
            color: #555;
            font-size: 0.97rem;
            margin-bottom: 2px;
            white-space: pre-line;
        }
        .notif-date {
            font-size: 0.85rem;
            color: #888;
        }
        .notif-badge {
            position: absolute;
            top: 1.1rem;
            right: 1.2rem;
            background: var(--danger-color);
            color: #fff;
            border-radius: 50%;
            min-width: 18px;
            height: 18px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 0.8rem;
            font-weight: 700;
            padding: 0 5px;
        }
        #notif-dropdown-empty {
            text-align: center;
            color: #888;
            padding: 1.5rem 0.5rem;
            font-size: 1.05rem;
        }

        .header-icon-badge, #notif-badge, #chat-badge { display: none; }
    </style>
{% endblock %}

{% block body %}
    <div class="dashboard">
        <!-- Sidebar -->
        <div class="sidebar">
            <div class="logo">
                <a href="{{ path('app_dashboard') }}">
                    <img src="{{ asset('images/logo.ico') }}" alt="Wazobuy Logo">
                </a>
                <span class="logo-subtitle">Administration Panel</span>
            </div>
            
            <nav>
                <a href="{{ path('app_dashboard') }}" class="nav-item active">
                    <span class="nav-item-icon">📊</span>
                    Tableau de bord
                </a>
                <a href="{{ path('app_admin_utilisateurs') }}" class="nav-item">
                    <span class="nav-item-icon">👥</span>
                    Utilisateurs
                </a>
                <a href="{{ path('app_admin_vendeurs') }}" class="nav-item">
                    <span class="nav-item-icon">🏪</span>
                    Vendeurs
                </a>
                <a href="{{ path('app_admin_produits') }}" class="nav-item">
                    <span class="nav-item-icon">📦</span>
                    Produits
                </a>
                <a href="{{ path('app_admin_commandes') }}" class="nav-item">
                    <span class="nav-item-icon">🛒</span>
                    Commandes
                </a>
                <a href="{{ path('app_admin_livraisons') }}" class="nav-item">
                    <span class="nav-item-icon">🚚</span>
                    Livraisons
                </a>
                <div class="nav-item">
                    <span class="nav-item-icon">💳</span>
                    Paiements
                </div>
                <a href="{{ path('app_admin_settings') }}" class="nav-item">
                    <span class="nav-item-icon">⚙️</span>
                    Paramètres
                </a>
            </nav>

            <div class="admin-section">
                {% if user is defined and user.photoProfil %}
                    <div class="admin-avatar"><img src="/{{ user.photoProfil }}" alt="Photo de profil" style="width:100%;height:100%;object-fit:cover;border-radius:50%;"></div>
                {% elseif user is defined and user.prenom and user.nom %}
                    <div class="admin-avatar">{{ user.prenom|slice(0,1)|upper }}{{ user.nom|slice(0,1)|upper }}</div>
                {% elseif user is defined and user.email %}
                    <div class="admin-avatar">{{ user.email|slice(0,1)|upper }}</div>
                {% else %}
                    <div class="admin-avatar">A</div>
                {% endif %}
                <div>
                    <div style="font-weight: 600; font-size: 14px;">Admin Principal</div>
                    <div style="font-size: 12px; opacity: 0.8;">{{ user.email is defined ? user.email : 'admin@wazobuy.com' }}</div>
                </div>
            </div>
        </div>

        <!-- Main Content -->
        <div class="main-content">
            <!-- Header -->
            <div class="header">
                <button class="mobile-menu-toggle" onclick="toggleSidebar()">☰</button>
                
                <div class="search-bar">
                    <span class="search-icon">🔍</span>
                    <input type="text" class="search-input" placeholder="Rechercher...">
                </div>
                
                <div class="header-actions">
                    <div style="position:relative;display:inline-block;">
                        <div class="header-icon-box" title="Notifications" id="notif-bell">
                            <i class="fas fa-bell"></i>
                            <span class="header-icon-badge" id="notif-badge">0</span>
                        </div>
                        <div id="notif-dropdown">
                            <div id="notif-dropdown-header">
                                <h4>Notifications</h4>
                                <button id="notif-mark-all">Tout marquer comme lu</button>
                            </div>
                            <div id="notif-list"></div>
                        </div>
                    </div>
                    <div class="header-icon-box" title="Messages">
                        <i class="fas fa-envelope"></i>
                        <span class="header-icon-badge" id="chat-badge">0</span>
                    </div>
                    <div class="user-info user-menu-container">
                        <span style="font-weight: 600;">Super Admin</span>
                        {% if user is defined and user.photoProfil %}
                            <div class="user-avatar" onclick="toggleUserMenu()"><img src="/{{ user.photoProfil }}" alt="Photo de profil" style="width:100%;height:100%;object-fit:cover;border-radius:50%;"></div>
                        {% elseif user is defined and user.prenom and user.nom %}
                            <div class="user-avatar" onclick="toggleUserMenu()">{{ user.prenom|slice(0,1)|upper }}{{ user.nom|slice(0,1)|upper }}</div>
                        {% elseif user is defined and user.email %}
                            <div class="user-avatar" onclick="toggleUserMenu()">{{ user.email|slice(0,1)|upper }}</div>
                        {% else %}
                            <div class="user-avatar" onclick="toggleUserMenu()">A</div>
                        {% endif %}
                        <div class="user-menu" id="userMenu">
                            <a href="{{ path('app_admin_profile') }}" class="user-menu-item"><i class="fas fa-user"></i> Profil</a>
                            <a href="{{ path('app_admin_settings') }}" class="user-menu-item"><i class="fas fa-cog"></i> Paramètres</a>
                            <a href="{{ path('_logout_main') }}" class="user-menu-item"><i class="fas fa-sign-out-alt"></i> Déconnexion</a>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Sidebar Overlay for Mobile -->
            <div class="sidebar-overlay" onclick="closeSidebar()"></div>

            <!-- Dashboard Content -->
            <div class="dashboard-content">
                <h1 class="page-title">Tableau de bord</h1>
                <p class="page-date">{{ dateAujourdhui }}</p>

                <!-- Stats Grid -->
                <div class="stats-grid">
                    <div class="stat-card">
                        <div class="stat-icon" style="background: linear-gradient(135deg, #667eea, #764ba2); color: white;">💰</div>
                        <div class="stat-label">Chiffre d'affaires</div>
                        <div class="stat-value">{{ '%.2f'|format(chiffreAffaires) }} FCFA</div>
                        <div class="stat-change positive">
                            ↗ +{{ '%.1f'|format(croissanceCommandes) }}% depuis hier
                        </div>
                    </div>

                    <div class="stat-card">
                        <div class="stat-icon" style="background: linear-gradient(135deg, #28a745, #20c997); color: white;">🛒</div>
                        <div class="stat-label">Commandes</div>
                        <div class="stat-value">{{ commandesTotal }}</div>
                        <div class="stat-change positive">
                            ↗ +{{ '%.1f'|format(croissanceCommandes) }}% depuis hier
                        </div>
                    </div>

                    <div class="stat-card">
                        <div class="stat-icon" style="background: linear-gradient(135deg, #ffc107, #fd7e14); color: white;">👥</div>
                        <div class="stat-label">Nouveaux utilisateurs</div>
                        <div class="stat-value">{{ utilisateursTotal }}</div>
                        <div class="stat-change positive">
                            ↗ +32% ce mois
                        </div>
                    </div>

                    <div class="stat-card">
                        <div class="stat-icon" style="background: linear-gradient(135deg, #17a2b8, #6f42c1); color: white;">📊</div>
                        <div class="stat-label">Taux de livraison</div>
                        <div class="stat-value">94.3%</div>
                        <div class="stat-change positive">
                            ↗ +2.3% cette semaine
                        </div>
                    </div>
                </div>

                <!-- Charts Section -->
                <div class="charts-grid">
                    <div class="chart-card">
                        <div class="chart-header">
                            <h3 class="chart-title">Évolution des ventes</h3>
                            <div class="chart-filters">
                                <button class="filter-btn active">7 jours</button>
                                <button class="filter-btn">30 jours</button>
                                <button class="filter-btn">1 an</button>
                            </div>
                        </div>
                        <div class="chart-container">
                            <canvas id="salesChart"></canvas>
                        </div>
                    </div>

                    <div class="chart-card">
                        <div class="chart-header">
                            <h3 class="chart-title">Commandes par région</h3>
                            <button class="filter-btn">📤 Exporter</button>
                        </div>
                        <div class="chart-container">
                            <canvas id="regionChart"></canvas>
                        </div>
                    </div>
                </div>

                <!-- Tables Section -->
                <div class="tables-grid">
                    <div class="table-card">
                        <div class="table-header">
                            <h3 class="table-title">Commandes récentes</h3>
                            <a href="#" class="view-all-btn">Voir tout</a>
                        </div>
                        <div class="table-responsive">
                            <table class="table">
                                <thead>
                                    <tr>
                                        <th>ID Commande</th>
                                        <th>Client</th>
                                        <th>Date</th>
                                        <th>Total</th>
                                        <th>Statut</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    {% for commande in commandesRecentes %}
                                    <tr>
                                        <td><strong>#{{ commande.id }}</strong></td>
                                        <td>{{ commande.clientPrenom }} {{ commande.clientNom }}</td>
                                        <td>{{ commande.dateCommande|date('d/m/Y H:i') }}</td>
                                        <td>{{ commande.montantTotal|number_format(2, ',', ' ') }} FCFA</td>
                                        <td>
                                            {% if commande.statut == 'en_attente' %}
                                                <span class="status-badge pending">En attente</span>
                                            {% elseif commande.statut == 'validée' %}
                                                <span class="status-badge success">Validée</span>
                                            {% elseif commande.statut == 'expédiée' %}
                                                <span class="status-badge info">Expédiée</span>
                                            {% elseif commande.statut == 'livrée' %}
                                                <span class="status-badge success">Livrée</span>
                                            {% elseif commande.statut == 'annulée' %}
                                                <span class="status-badge danger">Annulée</span>
                                            {% elseif commande.statut == 'litige' %}
                                                <span class="status-badge warning">Litige</span>
                                            {% else %}
                                                <span class="status-badge">{{ commande.statut }}</span>
                                            {% endif %}
                                        </td>
                                    </tr>
                                    {% else %}
                                    <tr>
                                        <td colspan="5" class="text-center">Aucune commande récente</td>
                                    </tr>
                                    {% endfor %}
                                </tbody>
                            </table>
                        </div>
                    </div>

                    <div class="table-card">
                        <div class="table-header">
                            <h3 class="table-title">Litiges actifs</h3>
                            <a href="{{ path('app_admin_commandes', {'statut': 'litige'}) }}" class="view-all-btn">Voir tout</a>
                        </div>
                        <div class="table-responsive">
                            <table class="table">
                                <thead>
                                    <tr>
                                        <th>ID Commande</th>
                                        <th>Client</th>
                                        <th>Date</th>
                                        <th>Montant</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    {% for litige in litiges %}
                                    <tr>
                                        <td><strong>#{{ litige.id }}</strong></td>
                                        <td>{{ litige.clientPrenom }} {{ litige.clientNom }}</td>
                                        <td>{{ litige.dateCommande|date('d/m/Y H:i') }}</td>
                                        <td>{{ litige.montantTotal|number_format(2, ',', ' ') }} FCFA</td>
                                        <td>
                                            <a href="{{ path('app_admin_commande_show', {'id': litige.id}) }}" class="action-btn view">Voir</a>
                                            <form method="post" action="{{ path('app_admin_commande_resolve', {'id': litige.id}) }}" style="display:inline;">
                                                <button type="submit" class="toggle-switch {% if litige.statut == 'litige' %}active{% endif %}" data-id="{{ litige.id }}" title="Résoudre"></button>
                                            </form>
                                        </td>
                                    </tr>
                                    {% else %}
                                    <tr>
                                        <td colspan="5" class="text-center">Aucun litige actif</td>
                                    </tr>
                                    {% endfor %}
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>

                <!-- Additional Tables -->
                <div class="tables-grid" style="margin-top: 1.5rem;">
                    <div class="table-card">
                        <div class="table-header">
                            <h3 class="table-title">Nouveaux vendeurs</h3>
                            <a href="{{ path('app_admin_vendeurs') }}" class="view-all-btn">Voir tout</a>
                        </div>
                        <div class="table-responsive">
                            <table class="table">
                                <thead>
                                    <tr>
                                        <th>Nom</th>
                                        <th>Email</th>
                                        <th>Date d'inscription</th>
                                        <th>Statut</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    {% for vendeur in nouveauxVendeurs %}
                                    <tr>
                                        <td>{{ vendeur.prenom }} {{ vendeur.nom }}</td>
                                        <td>{{ vendeur.email }}</td>
                                        <td>{{ vendeur.dateCreation|date('d/m/Y') }}</td>
                                        <td>
                                            {% if 'ROLE_VENDEUR' in vendeur.roles %}
                                                <span class="status-badge success">Actif</span>
                                            {% else %}
                                                <span class="status-badge warning">En attente</span>
                                            {% endif %}
                                        </td>
                                        <td>
                                            <a href="{{ path('app_admin_vendeur_show', {'id': vendeur.id}) }}" class="btn btn-sm btn-outline-primary rounded-circle me-1" data-bs-toggle="tooltip" title="Voir le profil">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                            <form method="post" action="{{ 'ROLE_VENDEUR' in vendeur.roles ? path('app_admin_vendeur_deactivate', {'id': vendeur.id}) : path('app_admin_vendeur_activate', {'id': vendeur.id}) }}" style="display:inline;">
                                                <button type="submit" class="toggle-switch {% if 'ROLE_VENDEUR' in vendeur.roles %}active{% endif %}" data-id="{{ vendeur.id }}" title="{{ 'ROLE_VENDEUR' in vendeur.roles ? 'Désactiver' : 'Activer' }}"></button>
                                            </form>
                                        </td>
                                    </tr>
                                    {% else %}
                                    <tr>
                                        <td colspan="5" class="text-center">Aucun nouveau vendeur</td>
                                    </tr>
                                    {% endfor %}
                                </tbody>
                            </table>
                        </div>
                    </div>

                    <div class="table-card">
                        <div class="table-header">
                            <h3 class="table-title">Activité récente</h3>
                            <a href="#" class="view-all-btn">Voir tout</a>
                        </div>
                        <div class="table-responsive">
                            <table class="table">
                                <thead>
                                    <tr>
                                        <th>Action</th>
                                        <th>Utilisateur</th>
                                        <th>Date</th>
                                        <th>Statut</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    {% for activite in activitesRecentes %}
                                    <tr>
                                        <td>{{ activite.action }}</td>
                                        <td>{{ activite.utilisateur }}</td>
                                        <td>{{ activite.date|date('d/m/Y H:i') }}</td>
                                        <td><span class="status-badge {{ activite.statut|lower }}">{{ activite.statut|capitalize }}</span></td>
                                    </tr>
                                    {% else %}
                                    <tr>
                                        <td colspan="4" class="text-center">Aucune activité récente</td>
                                    </tr>
                                    {% endfor %}
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div id="admin-chat-overlay"></div>
    <div id="admin-chat-panel">
        <div id="admin-chat-header">
            <span id="admin-chat-title">Messagerie Admin</span>
            <button id="admin-chat-back" style="display:none;margin-right:10px;font-size:1.2rem;background:none;border:none;color:#fff;cursor:pointer;">&larr;</button>
            <button id="admin-chat-close" title="Fermer le chat">&times;</button>
        </div>
        <div id="admin-chat-conversations"></div>
        <div id="admin-chat-messages" style="display:none;"></div>
        <form id="admin-chat-form" autocomplete="off" style="display:none;">
            <input type="text" id="admin-chat-input" placeholder="Votre message..." required />
            <button type="submit" id="admin-chat-send">Envoyer</button>
        </form>
    </div>

    <script>
        // Toggle switches functionality
        document.querySelectorAll('.toggle-switch').forEach(toggle => {
            toggle.addEventListener('click', function() {
                this.classList.toggle('active');
            });
        });

        // Chart filters functionality  
        document.querySelectorAll('.filter-btn').forEach(btn => {
            btn.addEventListener('click', function() {
                // Remove active class from siblings
                this.parentElement.querySelectorAll('.filter-btn').forEach(sibling => {
                    sibling.classList.remove('active');
                });
                // Add active class to clicked button
                this.classList.add('active');
            });
        });

        // Mobile sidebar toggle functionality
        function toggleSidebar() {
            const sidebar = document.querySelector('.sidebar');
            const overlay = document.querySelector('.sidebar-overlay');
            
            sidebar.classList.toggle('mobile-open');
            overlay.style.display = sidebar.classList.contains('mobile-open') ? 'block' : 'none';
        }

        function closeSidebar() {
            const sidebar = document.querySelector('.sidebar');
            const overlay = document.querySelector('.sidebar-overlay');
            
            sidebar.classList.remove('mobile-open');
            overlay.style.display = 'none';
        }

        // Close sidebar when clicking on nav items on mobile
        document.querySelectorAll('.nav-item').forEach(item => {
            item.addEventListener('click', function() {
                if (window.innerWidth <= 768) {
                    closeSidebar();
                }
            });
        });

        // Handle window resize
        window.addEventListener('resize', function() {
            if (window.innerWidth > 768) {
                const sidebar = document.querySelector('.sidebar');
                const overlay = document.querySelector('.sidebar-overlay');
                sidebar.classList.remove('mobile-open');
                overlay.style.display = 'none';
            }
        });

        // Search functionality
        document.querySelector('.search-input').addEventListener('input', function() {
            const searchTerm = this.value.toLowerCase();
            // Add search functionality here
        });

        // Notification badges click handlers
        document.querySelectorAll('.notification-badge').forEach(badge => {
            badge.addEventListener('click', function() {
                // Add notification handling here
                console.log('Notification clicked');
            });
        });

        function toggleUserMenu() {
            const menu = document.getElementById('userMenu');
            menu.style.display = menu.style.display === 'block' ? 'none' : 'block';
        }
        document.addEventListener('click', function(event) {
            const menu = document.getElementById('userMenu');
            const avatar = document.querySelector('.user-avatar');
            if (menu && avatar && !avatar.contains(event.target) && !menu.contains(event.target)) {
                menu.style.display = 'none';
            }
        });

        // Thème dynamique (clair/sombre/auto)
        function applyTheme(theme) {
            const body = document.body;
            body.classList.remove('theme-light', 'theme-dark');
            if (theme === 'clair') {
                body.classList.add('theme-light');
            } else if (theme === 'sombre') {
                body.classList.add('theme-dark');
            } else {
                // auto: détecte le thème système
                if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {
                    body.classList.add('theme-dark');
                } else {
                    body.classList.add('theme-light');
                }
            }
        }
        // Appliquer au chargement
        const savedTheme = localStorage.getItem('admin_theme');
        if (savedTheme) applyTheme(savedTheme);
        // Écouteur pour changement depuis la page paramètres
        window.addEventListener('storage', function(e) {
            if (e.key === 'admin_theme') applyTheme(e.newValue);
        });

        document.querySelectorAll('.toggle-switch').forEach(function(switchEl) {
            switchEl.addEventListener('click', function(e) {
                e.preventDefault();
                const form = this.closest('form');
                if (form) form.submit();
            });
        });

        const chatPanel = document.getElementById('admin-chat-panel');
        const chatOverlay = document.getElementById('admin-chat-overlay');
        const chatBtn = document.querySelector('.header-icon-box[title="Messages"]');
        const chatClose = document.getElementById('admin-chat-close');
        const chatConvs = document.getElementById('admin-chat-conversations');
        const chatMsgs = document.getElementById('admin-chat-messages');
        const chatForm = document.getElementById('admin-chat-form');
        const chatInput = document.getElementById('admin-chat-input');
        const chatBadge = document.querySelector('.header-icon-box[title="Messages"] .header-icon-badge');
        const chatBack = document.getElementById('admin-chat-back');
        const chatTitle = document.getElementById('admin-chat-title');

        let currentConvId = null;
        let chatInterval = null;

        function renderConversations(convs) {
            chatConvs.innerHTML = '';
            if (!convs.length) {
                chatConvs.innerHTML = '<div class="admin-chat-conv">Aucune conversation</div>';
                return;
            }
            convs.forEach(conv => {
                const div = document.createElement('div');
                div.className = 'admin-chat-conv';
                div.innerHTML = `
                    <div class="chat-avatar-list">
                        ${conv.photoProfil ? `<img src="${conv.photoProfil}" class="chat-avatar" alt="avatar" />` : `<div class="chat-avatar chat-avatar-initials">${(conv.prenom ? conv.prenom[0] : '?')}${(conv.nom ? conv.nom[0] : '?')}</div>`}
                    </div>
                    <div class="chat-conv-info">
                        <div class="chat-conv-name">${conv.prenom || ''} ${conv.nom || ''}</div>
                        <div class="chat-conv-last">${conv.dernierMessage ? conv.dernierMessage.substring(0, 40) : ''}</div>
                    </div>
                    <div class="chat-conv-meta">
                        <span class="chat-conv-date">${conv.dateDernierMessage}</span>
                        ${conv.unreadCount > 0 ? `<span class="chat-conv-badge">${conv.unreadCount}</span>` : ''}
                    </div>
                `;
                div.onclick = () => openConversation(conv.conversationId, conv.prenom, conv.nom);
                chatConvs.appendChild(div);
            });
            chatConvs.style.display = '';
            chatMsgs.style.display = 'none';
            chatForm.style.display = 'none';
            chatBack.style.display = 'none';
            chatTitle.textContent = 'Messagerie Admin';
        }

        function openConversation(conversationId, prenom, nom) {
            currentConvId = conversationId;
            chatConvs.style.display = 'none';
            chatMsgs.style.display = '';
            chatForm.style.display = '';
            chatBack.style.display = '';
            chatTitle.textContent = `${prenom || ''} ${nom || ''}`;
            loadMessages(conversationId);
        }

        if (chatBack) {
            chatBack.onclick = function() {
                chatMsgs.style.display = 'none';
                chatForm.style.display = 'none';
                chatConvs.style.display = '';
                chatBack.style.display = 'none';
                chatTitle.textContent = 'Messagerie Admin';
            };
        }

        function loadMessages(conversationId) {
            fetch('/admin/chat/messages/' + conversationId)
                .then(r => r.json())
                .then(messages => {
                    renderMessages(messages);
                });
        }

        function renderMessages(messages) {
            chatMsgs.innerHTML = '';
            messages.forEach(msg => {
                const wrap = document.createElement('div');
                wrap.className = 'admin-chat-message' + (msg.isMe ? ' me' : '');
                // Avatar
                let avatar = '';
                if (msg.photoProfil) {
                    avatar = `<img src="${msg.photoProfil}" class="chat-avatar" alt="avatar" />`;
                } else {
                    const initials = (msg.prenom ? msg.prenom[0] : '?') + (msg.nom ? msg.nom[0] : '?');
                    avatar = `<div class="chat-avatar chat-avatar-initials">${initials.toUpperCase()}</div>`;
                }
                // Nom et date
                const meta = `<div class="chat-meta"><span class="chat-name">${msg.prenom || ''} ${msg.nom || ''}</span><span class="chat-date">${msg.dateEnvoi}</span></div>`;
                wrap.innerHTML = `${avatar}<div class="chat-bubble">${meta}<div class="chat-text">${msg.contenu}</div></div>`;
                chatMsgs.appendChild(wrap);
            });
            chatMsgs.scrollTop = chatMsgs.scrollHeight;
        }

        function sendMessage(e) {
            e.preventDefault();
            if (!chatInput.value.trim() || !currentConvId) return;
            fetch('/admin/chat/message', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({
                    destinataire: currentConvId.replace(window.currentUser, '').replace('-', ''),
                    contenu: chatInput.value,
                    conversationId: currentConvId
                })
            })
            .then(r => r.json())
            .then(() => {
                chatInput.value = '';
                loadMessages(currentConvId);
            });
        }

        function refreshMessages() {
            if (chatPanel.classList.contains('open') && currentConvId) {
                loadMessages(currentConvId);
            }
        }

        function updateChatBadge() {
            fetch('/admin/chat/conversations')
                .then(r => r.json())
                .then(convs => {
                    let unread = 0;
                    convs.forEach(c => { if (c.unreadCount) unread += c.unreadCount; });
                    if (unread > 0) {
                        chatBadge.textContent = unread;
                        chatBadge.style.display = '';
                    } else {
                        chatBadge.textContent = '';
                        chatBadge.style.display = 'none';
                    }
                });
        }

        if (chatBtn && chatPanel && chatOverlay && chatClose) {
            chatBtn.addEventListener('click', function() {
                chatPanel.classList.add('open');
                chatOverlay.classList.add('open');
                loadConversations();
                if (chatInterval) clearInterval(chatInterval);
                chatInterval = setInterval(refreshMessages, 5000);
            });
            chatClose.addEventListener('click', function() {
                chatPanel.classList.remove('open');
                chatOverlay.classList.remove('open');
                if (chatInterval) clearInterval(chatInterval);
            });
            chatOverlay.addEventListener('click', function() {
                chatPanel.classList.remove('open');
                chatOverlay.classList.remove('open');
                if (chatInterval) clearInterval(chatInterval);
            });
        }
        if (chatForm) {
            chatForm.addEventListener('submit', sendMessage);
        }
        window.currentUser = '{{ app.user ? app.user.userIdentifier : "" }}';
        setInterval(updateChatBadge, 7000);
        updateChatBadge();

        const notifBell = document.getElementById('notif-bell');
        const notifDropdown = document.getElementById('notif-dropdown');
        const notifList = document.getElementById('notif-list');
        const notifBadge = document.getElementById('notif-badge');
        const notifMarkAll = document.getElementById('notif-mark-all');
        let notifOpen = false;

        function renderNotifications(notifs) {
            notifList.innerHTML = '';
            if (!notifs.length) {
                notifList.innerHTML = '<div id="notif-dropdown-empty">Aucune notification</div>';
                notifBadge.textContent = '';
                notifBadge.style.display = 'none';
                return;
            }
            let unread = 0;
            notifs.forEach(n => { if (!n.estLu) unread++; });
            if (unread > 0) {
                notifBadge.textContent = unread;
                notifBadge.style.display = '';
            } else {
                notifBadge.textContent = '';
                notifBadge.style.display = 'none';
            }
            notifs.forEach(n => {
                const div = document.createElement('div');
                div.className = 'notif-item' + (n.estLu ? '' : ' unread');
                div.innerHTML = `<div class="notif-title">${n.titre}</div><div class="notif-message">${n.message}</div><div class="notif-date">${n.date}</div>${!n.estLu ? '<span class="notif-badge">•</span>' : ''}`;
                div.onclick = function() {
                    fetch(`/admin/notifications/read/${n.id}`, {method:'POST'}).then(() => {
                        div.classList.remove('unread');
                        div.querySelector('.notif-badge')?.remove();
                        n.estLu = true;
                        updateNotifications();
                        if (n.lien) window.location.href = n.lien;
                    });
                };
                notifList.appendChild(div);
            });
        }
        function updateNotifications() {
            fetch('/admin/notifications').then(r => r.json()).then(renderNotifications);
        }
        if (notifBell && notifDropdown) {
            notifBell.addEventListener('click', function(e) {
                notifDropdown.classList.toggle('open');
                notifOpen = notifDropdown.classList.contains('open');
                if (notifOpen) updateNotifications();
            });
            document.addEventListener('click', function(e) {
                if (!notifDropdown.contains(e.target) && !notifBell.contains(e.target)) {
                    notifDropdown.classList.remove('open');
                    notifOpen = false;
                }
            });
        }
        if (notifMarkAll) {
            notifMarkAll.onclick = function() {
                fetch('/admin/notifications/read-all', {method:'POST'}).then(() => updateNotifications());
            };
        }
        setInterval(updateNotifications, 10000);
    </script>
{% endblock %} 