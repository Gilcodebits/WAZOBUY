{% extends 'base.html.twig' %}
{% block title %}Messagerie{% endblock %}
{% block body %}
<div class="container py-4">
    <h2 class="mb-4">Messagerie</h2>
    <div class="row">
        <div class="col-md-4 border-end" style="height: 70vh; overflow-y: auto;">
            <h5>Conversations</h5>
            <div id="conversations-list">
                {% if conversations is empty %}
                    <div class="text-center text-muted py-4">
                        <i class="fas fa-inbox fa-2x mb-2"></i>
                        <p>Aucune conversation</p>
                    </div>
                {% else %}
                    {% for conversation in conversations %}
                        <div class="conversation-item p-3 border-bottom" data-user-id="{{ conversation.other_user.id }}" style="cursor: pointer;">
                            <div class="d-flex justify-content-between align-items-start">
                                <div class="flex-grow-1">
                                    <h6 class="mb-1">{{ conversation.other_user.nom }} {{ conversation.other_user.prenom }}</h6>
                                    <p class="text-muted small mb-1" style="max-width: 200px; overflow: hidden; text-overflow: ellipsis; white-space: nowrap;">
                                        {% if conversation.last_message.expediteur.id == app.user.id %}
                                            <strong>Vous :</strong>
                                        {% endif %}
                                        {{ conversation.last_message.contenu }}
                                    </p>
                                    <small class="text-muted">{{ conversation.last_message.dateEnvoi|date('d/m/Y H:i') }}</small>
                                </div>
                                {% if conversation.unread_count > 0 %}
                                    <span class="badge bg-primary">{{ conversation.unread_count }}</span>
                                {% endif %}
                            </div>
                        </div>
                    {% endfor %}
                {% endif %}
            </div>
        </div>
        <div class="col-md-8 d-flex flex-column" style="height: 70vh;">
            <div id="chat-box" class="flex-grow-1 border rounded p-3 mb-2 bg-light" style="overflow-y: auto; height: 100%;">
                <div class="text-center text-muted py-5">
                    <i class="fas fa-comments fa-2x mb-2"></i>
                    <p>Sélectionnez une conversation pour commencer</p>
                </div>
            </div>
            <form id="chat-form" class="d-flex mt-2" style="display:none;">
                <input type="text" id="chat-input" class="form-control me-2" placeholder="Écrire un message..." autocomplete="off">
                <button class="btn btn-primary" type="submit">
                    <i class="fas fa-paper-plane"></i>
                </button>
            </form>
        </div>
    </div>
</div>

<script>
let selectedUserId = null;
const chatBox = document.getElementById('chat-box');
const chatForm = document.getElementById('chat-form');
const chatInput = document.getElementById('chat-input');

// Charger les conversations au chargement de la page
document.addEventListener('DOMContentLoaded', function() {
    loadConversations();
});

document.querySelectorAll('.conversation-item').forEach(item => {
    item.addEventListener('click', function() {
        document.querySelectorAll('.conversation-item').forEach(i => i.classList.remove('active'));
        this.classList.add('active');
        selectedUserId = this.getAttribute('data-user-id');
        loadMessages();
        chatForm.style.display = 'flex';
    });
});

function loadConversations() {
    fetch('{{ path('admin_chat_conversations') }}')
        .then(r => r.json())
        .then(data => {
            const container = document.getElementById('conversations-list');
            if (data.length === 0) {
                container.innerHTML = `
                    <div class="text-center text-muted py-4">
                        <i class="fas fa-inbox fa-2x mb-2"></i>
                        <p>Aucune conversation</p>
                    </div>
                `;
            } else {
                container.innerHTML = data.map(conv => `
                    <div class="conversation-item p-3 border-bottom" data-user-id="${conv.id}" style="cursor: pointer;">
                        <div class="d-flex justify-content-between align-items-start">
                            <div class="flex-grow-1">
                                <h6 class="mb-1">${conv.name}</h6>
                                <p class="text-muted small mb-1" style="max-width: 200px; overflow: hidden; text-overflow: ellipsis; white-space: nowrap;">
                                    ${conv.isFromMe ? '<strong>Vous :</strong>' : ''}${conv.lastMessage}
                                </p>
                                <small class="text-muted">${conv.date}</small>
                            </div>
                            ${conv.unreadCount > 0 ? `<span class="badge bg-primary">${conv.unreadCount}</span>` : ''}
                        </div>
                    </div>
                `).join('');
                
                // Re-attacher les événements
                document.querySelectorAll('.conversation-item').forEach(item => {
                    item.addEventListener('click', function() {
                        document.querySelectorAll('.conversation-item').forEach(i => i.classList.remove('active'));
                        this.classList.add('active');
                        selectedUserId = this.getAttribute('data-user-id');
                        loadMessages();
                        chatForm.style.display = 'flex';
                    });
                });
            }
        });
}

function loadMessages() {
    chatBox.innerHTML = '<div class="text-center text-muted">Chargement...</div>';
    fetch(`{{ path('admin_chat_messages') }}?user_id=${selectedUserId}`)
        .then(r => r.json())
        .then(data => {
            chatBox.innerHTML = '';
            if (data.length === 0) {
                chatBox.innerHTML = '<div class="text-center text-muted py-5">Aucun message dans cette conversation</div>';
            } else {
                data.forEach(msg => {
                    const div = document.createElement('div');
                    div.className = 'mb-3 ' + (msg.isMe ? 'text-end' : 'text-start');
                    div.innerHTML = `
                        <div class="d-inline-block p-3 rounded" style="background:${msg.isMe ? '#007bff' : '#f8f9fa'}; color:${msg.isMe ? 'white' : 'black'}; max-width:70%;">
                            <div class="message-content">${msg.content}</div>
                            <small class="message-date" style="opacity: 0.7;">${msg.date}</small>
                        </div>
                    `;
                    chatBox.appendChild(div);
                });
                chatBox.scrollTop = chatBox.scrollHeight;
            }
        });
}

chatForm.addEventListener('submit', function(e) {
    e.preventDefault();
    if (!chatInput.value.trim() || !selectedUserId) return;
    
    const formData = new FormData();
    formData.append('user_id', selectedUserId);
    formData.append('content', chatInput.value);
    
    fetch(`{{ path('admin_chat_send') }}`, {
        method: 'POST',
        body: formData
    }).then(r => r.json()).then(data => {
        if (data.success) {
            chatInput.value = '';
            loadMessages();
            loadConversations(); // Rafraîchir la liste des conversations
        }
    });
});

// Rafraîchir les conversations toutes les 30 secondes
setInterval(loadConversations, 30000);
</script>

<style>
.conversation-item:hover { background-color: #f8f9fa; }
.conversation-item.active { background-color: #e3f0ff; border-left: 3px solid #007bff; }
#chat-box { min-height: 300px; }
.message-content { word-wrap: break-word; }
</style>
{% endblock %} 